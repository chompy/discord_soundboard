<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/purecss@3.0.0/build/pure-min.css" integrity="sha384-X38yfunGUhNzHpBaEBsWLO+A0HDYOQi8ufWDkZ0k9e0eXz/tH3II7uKZ9msv++Ls" crossorigin="anonymous">
  <style type="text/css">
    html, body { margin: 15px;  background: black; color: #fff; }
    h1 { border-bottom: 1px solid; padding-bottom: 5px; margin-bottom: 10px; }
    .options { border-bottom: 1px solid; padding-bottom: 10px; }
    .sounds { margin-top: 10px; }
    .sounds a { margin-bottom: 10px; }
    .pure-button { background-color: #8c4141; color: #fff; }
  </style>
  <title>{{ .GuildName }} - Sound Board</title>
</head>

<body>
  <h1>{{ .GuildName }} - Sound Board</h1>
  <div class="options">
    <a class="pure-button pure-button-primary" id="stop">Stop Current Playback</a>
    <a class="pure-button pure-button-primary" id="play-multi" href="#">Play Multiple Sounds</a>
  </div>
  <div class="sounds">
    {{ range $cat := .Categories }}
    <h2>{{index $cat 1}}</h2>

      {{ range $name := $.Sounds }}
        {{ if $.Categories.SoundInCategory $name $cat }}
          <a class="pure-button" href="/play?guild={{ $.GuildID }}&channel={{ $.ChannelID }}&sound={{ $name }}" data-sound="{{ $name }}" title="{{ $name }}">{{ soundNiceName $name $cat $.ReplaceWords }}</a>
        {{ end }}
      {{ end }}

    {{ end }}

  </div>

  <script type="text/javascript">

    // WEBSOCKET INIT
    var ws;
    const openConnection = (callback) => {
      ws = new WebSocket("/ws?guild={{ $.GuildID }}&channel={{ $.ChannelID }}");
      ws.onopen = (e) => {
        console.log("> WS connection established.");
        if (callback) {
          callback();
        }
      }
      ws.onclose = (e) => {
        console.log("> WS connection closed.");
        ws = null;
      }
    };

    const sendCommand = (command) => {
      const _sendCommand = () => {
        ws.send(command);
      };
      if (!ws) {
        console.log("(Re)connecting.");
        openConnection(_sendCommand);
        return;
      }
      _sendCommand();
    };

    // SOUNDBOARD BUTTONS
    let buttons = document.getElementsByTagName("a");
    for (let i = 0; i < buttons.length; i++) {
      buttons[i].addEventListener("click", (e) => {
        e.preventDefault(true);
        let sound = e.target.getAttribute("data-sound");
        if (sound) {
          console.log("> Play '" + sound + "'.");
          sendCommand("play|" + sound);
        }
      });
    }

    // MULTI SOUND
    document.getElementById("play-multi").addEventListener("click", (e) => {
      e.preventDefault(true);
      let instruct = prompt("Play snippets of different sounds back to back.\nUse the format...\n<sound_name>:<start>-<end>,<sound_name>:<start>-<end>,etc\nStart/end are in milliseconds.")
      if (instruct) {
        console.log("> Play Multi: " + instruct + ".");
        sendCommand("play-multi|" + instruct);
      }
    });

    // STOP
    const stopSounds = () => {
      console.log("> Stop sounds.");
      sendCommand("stop");
    };
    document.getElementById("stop").addEventListener("click", (e) => {
      e.preventDefault(true);
      stopSounds();
      return false;
    });
    window.addEventListener("keypress", (e) => {
      if (e.key == "s") {
        stopSounds();
      }
    });

  </script>

</body>

</html>
